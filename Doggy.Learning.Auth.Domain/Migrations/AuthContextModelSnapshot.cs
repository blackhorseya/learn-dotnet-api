// <auto-generated />
using System;
using Doggy.Learning.Auth.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Doggy.Learning.Auth.Domain.Migrations
{
    [DbContext(typeof(AuthContext))]
    partial class AuthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.GroupRole", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("GroupId");

                    b.HasKey("RoleId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupRole");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.ModulePermission", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("PermissionId");

                    b.HasKey("ModuleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("ModulePermission");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.PermissionOperation", b =>
                {
                    b.Property<int>("OperationId");

                    b.Property<int>("PermissionId");

                    b.HasKey("OperationId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionOperation");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("PermissionId");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.GroupRole", b =>
                {
                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Group", "Group")
                        .WithMany("Roles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Role", "Role")
                        .WithMany("Groups")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.ModulePermission", b =>
                {
                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Module", "Module")
                        .WithMany("ModulePermissions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Permission", "Permission")
                        .WithMany("ModulePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.PermissionOperation", b =>
                {
                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Operation", "Operation")
                        .WithMany("PermissionOperations")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Permission", "Permission")
                        .WithMany("PermissionOperations")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Doggy.Learning.Auth.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Doggy.Learning.Auth.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
